(()=>{var e={426:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"* {\n\tmargin: 0;\n\tbox-sizing: border-box;\n\t/* border: 1px solid limegreen; */\n}\n\nh3 {\n\ttext-align: center;\n}\n\n#content {\n\twidth: 100vw;\n\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.links-image {\n\theight: 2rem;\n}\n\n.about-dev-container {\n\tdisplay: flex;\n\tgap: 1rem;\n\talign-self: center;\n}\n\n.about-us {\n\tmargin: 1rem;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n}\n\n.about-image-container {\n\theight: 40vh;\n\n\toverflow: hidden;\n\tbox-shadow:\n\t\t0px 4px 16px rgba(17, 17, 26, 0.1),\n\t\t0px 8px 24px rgba(17, 17, 26, 0.1),\n\t\t0px 16px 56px rgba(17, 17, 26, 0.1);\n}\n\n.about-image {\n\theight: 100%;\n\twidth: 100%;\n\n\tobject-fit: cover;\n\tobject-position: center;\n}\n\n.user-name {\n\tfont-size: 2rem;\n\tcolor: white;\n\ttext-align: center;\n\n\ttransform: translateY(-110%);\n}\n\n.projects-container {\n\tpadding: 1rem;\n\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\n\tgap: 1rem;\n}\n\n.project {\n\theight: 240px;\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n}\n\n.project-name-link {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.project-link {\n\theight: 1rem;\n}\n\n.footer {\n\tdisplay: flex;\n\tgap: 1rem;\n\tflex-direction: column;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;CACC,SAAS;CACT,sBAAsB;CACtB,iCAAiC;AAClC;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,YAAY;;CAEZ,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,aAAa;CACb,SAAS;CACT,kBAAkB;AACnB;;AAEA;CACC,YAAY;;CAEZ,aAAa;CACb,sBAAsB;CACtB,SAAS;AACV;;AAEA;CACC,YAAY;;CAEZ,gBAAgB;CAChB;;;qCAGoC;AACrC;;AAEA;CACC,YAAY;CACZ,WAAW;;CAEX,iBAAiB;CACjB,uBAAuB;AACxB;;AAEA;CACC,eAAe;CACf,YAAY;CACZ,kBAAkB;;CAElB,4BAA4B;AAC7B;;AAEA;CACC,aAAa;;CAEb,aAAa;CACb,eAAe;CACf,uBAAuB;;CAEvB,SAAS;AACV;;AAEA;CACC,aAAa;CACb,iBAAiB;CACjB,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,8BAA8B;AAC/B;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,aAAa;CACb,SAAS;CACT,sBAAsB;AACvB",sourcesContent:["* {\n\tmargin: 0;\n\tbox-sizing: border-box;\n\t/* border: 1px solid limegreen; */\n}\n\nh3 {\n\ttext-align: center;\n}\n\n#content {\n\twidth: 100vw;\n\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.links-image {\n\theight: 2rem;\n}\n\n.about-dev-container {\n\tdisplay: flex;\n\tgap: 1rem;\n\talign-self: center;\n}\n\n.about-us {\n\tmargin: 1rem;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n}\n\n.about-image-container {\n\theight: 40vh;\n\n\toverflow: hidden;\n\tbox-shadow:\n\t\t0px 4px 16px rgba(17, 17, 26, 0.1),\n\t\t0px 8px 24px rgba(17, 17, 26, 0.1),\n\t\t0px 16px 56px rgba(17, 17, 26, 0.1);\n}\n\n.about-image {\n\theight: 100%;\n\twidth: 100%;\n\n\tobject-fit: cover;\n\tobject-position: center;\n}\n\n.user-name {\n\tfont-size: 2rem;\n\tcolor: white;\n\ttext-align: center;\n\n\ttransform: translateY(-110%);\n}\n\n.projects-container {\n\tpadding: 1rem;\n\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\n\tgap: 1rem;\n}\n\n.project {\n\theight: 240px;\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n}\n\n.project-name-link {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.project-link {\n\theight: 1rem;\n}\n\n.footer {\n\tdisplay: flex;\n\tgap: 1rem;\n\tflex-direction: column;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,p="".concat(d," ").concat(l);o[d]=l+1;var u=t(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var m=a(A,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},54:(e,n,t)=>{const r=t(210),{getLinks:a}=t(884);e.exports={getAboutUs:function(){const e=document.createElement("div");e.classList.add("about-us");const n=document.createElement("div");n.classList.add("about-image-container");const t=new Image;t.classList.add("about-image"),t.src=r,n.appendChild(t);const o=document.createElement("p");o.classList.add("user-name"),o.innerText="Panda Panda",n.appendChild(o),e.appendChild(n);const i=document.createElement("div"),c=document.createElement("h3");c.classList.add("about-title"),c.innerText="About me",i.appendChild(c);const s=document.createElement("p");s.innerText="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas luctus tellus nulla, at dapibus diam tristique eget. Pellentesque ultrices imperdiet nunc, eget tempor erat sodales in. Vestibulum sodales arcu faucibus odio gravida imperdiet.",i.appendChild(s),e.appendChild(i);const d=a();return d.classList.add("about-dev-container"),e.appendChild(d),e}}},994:(e,n,t)=>{const{getLinks:r}=t(884);e.exports={getFooter:function(){const e=document.createElement("div");e.classList.add("footer");const n=document.createElement("h3");n.innerText="Contact me",e.appendChild(n);const t=document.createElement("div"),a=document.createElement("p");a.innerText="Please get in touch if you think our work could be mutually beneficial!",t.appendChild(a);const o=document.createElement("p");o.innerHTML="1234 Random Road <br> Random Town, California 12345",t.appendChild(o);const i=document.createElement("p");i.innerHTML="555-555-5555 <br> panda.is.cute@forest.com",t.appendChild(i),e.appendChild(t);const c=r();return c.classList.add("about-dev-container"),e.appendChild(c),e}}},884:(e,n,t)=>{const r=t(771),a=t(566),o=t(9);e.exports={getLinks:function(){const e=document.createElement("div"),n=new Image;n.classList.add("links-image"),n.src=r,e.appendChild(n);const t=new Image;t.classList.add("links-image"),t.src=a,e.appendChild(t);const i=new Image;return i.classList.add("links-image"),i.src=o,e.appendChild(i),e}}},617:(e,n,t)=>{const r=t(771),a=t(110);e.exports={getProjects:function(){const e=document.createElement("div"),n=document.createElement("h3");n.innerText="My work",e.appendChild(n);const t=document.createElement("div");t.classList.add("projects-container");for(let e=0;e<=5;e++){const e=document.createElement("div");e.classList.add("project");const n=document.createElement("div");n.innerText="Screenshot of project",n.style="height: 60%; background-color: #c3bef0; display: flex; justify-content: center; align-items: center;",e.appendChild(n);const o=document.createElement("div");o.classList.add("project-name-link");const i=document.createElement("p");i.innerText="Project Name",o.appendChild(i);const c=document.createElement("div"),s=new Image;s.src=r,s.classList.add("project-link"),c.appendChild(s);const d=new Image;d.src=a,d.classList.add("project-link"),c.appendChild(d),o.appendChild(c),e.appendChild(o);const l=document.createElement("div");l.innerHTML="Short description of the project. <br> Just a couple sentences will do",e.appendChild(l),t.appendChild(e)}return e.appendChild(t),e}}},771:(e,n,t)=>{"use strict";e.exports=t.p+"3c903c66b2c5334c8c0b.svg"},566:(e,n,t)=>{"use strict";e.exports=t.p+"15f0337078f13db400ac.svg"},110:(e,n,t)=>{"use strict";e.exports=t.p+"3ede19ed228086e87d89.svg"},210:(e,n,t)=>{"use strict";e.exports=t.p+"689832d3358d94ade402.jpg"},9:(e,n,t)=>{"use strict";e.exports=t.p+"57534e0ae36f40b1a2f9.svg"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{"use strict";var e=t(54),n=t(994),r=t(617),a=t(379),o=t.n(a),i=t(795),c=t.n(i),s=t(569),d=t.n(s),l=t(565),p=t.n(l),u=t(216),A=t.n(u),m=t(589),C=t.n(m),f=t(426),g={};g.styleTagTransform=C(),g.setAttributes=p(),g.insert=d().bind(null,"head"),g.domAPI=c(),g.insertStyleElement=A(),o()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals,console.log("Hello Fadedead"),function(){const t=document.getElementById("content");t.appendChild((0,e.getAboutUs)()),t.appendChild((0,r.getProjects)()),t.appendChild((0,n.getFooter)())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,